1、让一个盒子处于整个当前页面正中间的位置(水平和垂直都是居中)
   ->使用JS实现:兼容全部的浏览器
     <script type="text/javascript">
         //->获取当前屏幕的宽度和高度
         var winW = document.documentElement.clientWidth || document.body.clientWidth,
                 winH = document.documentElement.clientHeight || document.body.clientHeight;
         //->获取盒子的宽度和高度
         var box = document.getElementById("box"),
                 boxW = box.offsetWidth,
                 boxH = box.offsetHeight;
         box.style.position = "absolute";
         box.style.left = (winW - boxW) / 2 + "px";
         box.style.top = (winH - boxH) / 2 + "px";
     </script>
   ->使用CSS实现:兼容全部的浏览器
     <style type="text/css">
         * {
             margin: 0;
             padding: 0;
         }

         .box {
             position: absolute;
             top: 50%;
             left: 50%;
             margin-top: -100px; /*--上边距等于负的高度的一半值--*/
             margin-left: -100px; /*--左边距等于负的宽度的一半值--*/

             width: 200px;
             height: 200px;
             border: 2px solid green;
         }
     </style>
     上述的这种方式需要知道具体的宽度和高度，并计算出具体的margin值才可以实现，如果后期宽高值修改，我们的margin的值也需要修改

   ->使用CSS实现:不兼容IE6~7(目前移动端项目的居中采用这种方法即可)
     .box {
         position: absolute;
         top: 0;
         right: 0;
         bottom: 0;
         left: 0;
         margin: auto;

         width: 200px;
         height: 200px;
         border: 2px solid green;
     }
     这样的操作不需要知道具体的宽度和高度,换句话说居中和宽度高度的值没有关系,以后宽高改变它会随着自己适应居中

   ->使用CSS3中新增加flex伸缩盒模型实现居中:浏览器的兼容性较差