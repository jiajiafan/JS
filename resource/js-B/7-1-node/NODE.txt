1、如何通过NODE把在服务器端编写的JS代码运行起来?
  ->“客户端渲染我们的JS”：首先需要把JS文件(JS代码)引入到一个HTML页面中,通过浏览器渲染HTML页面的时候把我们的JS也渲染

  ->“NODE环境渲染我们的JS”：
    A、webStorm中打开某一个JS文件,右键"Run xxx.js",这样就相当于在NODE服务环境中把我们编写的服务器端程序运行了
    B、通过NODE命令来执行我们的JS:在需要执行的文件所在目录，shift+右键(在此处打开命令窗口)，输入 node 你要执行的js文件名称（node sum.js），就可以把sum.js中编写的服务器端程序JS代码运行了

2、在DOS命令中我们可以通过 “mkdir 文件夹名” 来创建一个文件夹；还可以通过 “echo >文档名称” 来创建一个文件或者文档；还可以通过命令读取一个文件中的内容，也可以向指定的文件中写入内容...(例如：mkdir zhufeng / echo >zhufeng.txt)

   ->"我们把以上文件的读写操作称之为I/O操作"

   ->客户端浏览器渲染的JS代码是无法进行I/O操作的(除非特别变态的浏览器提供了对应的方法,除了文件上传<input type='file'/>可以获取到文件以外)

   ->我们的NODE环境渲染的JS,是可以进行I/O操作的,我们可以通过NODE提供的一些方法,服务器上创建或者删除文件，读取文件中的内容，或者向文件中写入一些内容...


3、NODE.JS是由很多的模块组成的，一个供JS运行和调取特殊方法，以此实现相关功能的，一个服务器环境的运行平台
   ->内置模块:只要安装了NODE,天生自带的模块,例如：http、fs、url...

   ->第三方模块:别人写好和封装的一些优秀模块,如果我们同样想实现类似的功能,只需要把对应的模块安装到NODE环境平台上即可(https://www.npmjs.com/)
     安装：npm install 第三方模块的名称 ->安装完可以在node_modules文件夹中查看
     导入：在JS中通过 var 变量名=require("第三方模块名称");
     使用：变量名.模块提供的方法名()
     卸载：npm uninstall 第三方模块的名称

   ->自定义模块:自己编写的模块,在NODE中,只要我们创建一个JS文件,那么这个文件就可以称之为一个自定义模块了,在这个JS中编写的方法都可以称之为我们模块的API方法



API:应用程序接口(Application Programing Interface),我们编写的方法或者URL地址,可以供其他程序调取使用,那么我们就可以把这个方法或者地址称之为一个API接口

在NODE中,JS修改一次,一般情况下,想让最新的代码起到效果,我们需要重新的使用NODE执行一次对应的JS


a、b、c三个模块
b中的fnb2这个方法执行的时候,需要调取a模块中的fna1、fna2、fna3三个方法
c中需要调取b中的fnb2这个方法
c中需要调取a中的fna1这个方法



